//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace EzTravelWeb.localService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="busStop", Namespace="http://schemas.datacontract.org/2004/07/WCFLocalBus")]
    public partial class busStop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BusStopNameField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusStopName {
            get {
                return this.BusStopNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusStopNameField, value) != true)) {
                    this.BusStopNameField = value;
                    this.RaisePropertyChanged("BusStopName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PathLocation", Namespace="http://schemas.datacontract.org/2004/07/WCFLocalBus")]
    public partial class PathLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BusServiceNumField;
        
        private double EndLatitudeField;
        
        private double EndLongitudeField;
        
        private string LocationField;
        
        private string ModeField;
        
        private int SequenceField;
        
        private double StartLatitudeField;
        
        private double StartLongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusServiceNum {
            get {
                return this.BusServiceNumField;
            }
            set {
                if ((this.BusServiceNumField.Equals(value) != true)) {
                    this.BusServiceNumField = value;
                    this.RaisePropertyChanged("BusServiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndLatitude {
            get {
                return this.EndLatitudeField;
            }
            set {
                if ((this.EndLatitudeField.Equals(value) != true)) {
                    this.EndLatitudeField = value;
                    this.RaisePropertyChanged("EndLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EndLongitude {
            get {
                return this.EndLongitudeField;
            }
            set {
                if ((this.EndLongitudeField.Equals(value) != true)) {
                    this.EndLongitudeField = value;
                    this.RaisePropertyChanged("EndLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartLatitude {
            get {
                return this.StartLatitudeField;
            }
            set {
                if ((this.StartLatitudeField.Equals(value) != true)) {
                    this.StartLatitudeField = value;
                    this.RaisePropertyChanged("StartLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartLongitude {
            get {
                return this.StartLongitudeField;
            }
            set {
                if ((this.StartLongitudeField.Equals(value) != true)) {
                    this.StartLongitudeField = value;
                    this.RaisePropertyChanged("StartLongitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBMarker", Namespace="http://schemas.datacontract.org/2004/07/WCFLocalBus")]
    public partial class DBMarker : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DirectionField;
        
        private string JIDField;
        
        private string MarkerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JID {
            get {
                return this.JIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JIDField, value) != true)) {
                    this.JIDField = value;
                    this.RaisePropertyChanged("JID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkerID {
            get {
                return this.MarkerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkerIDField, value) != true)) {
                    this.MarkerIDField = value;
                    this.RaisePropertyChanged("MarkerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Itinerary", Namespace="http://schemas.datacontract.org/2004/07/WCFLocalBus")]
    public partial class Itinerary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string PlaceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="localService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetBusStop", ReplyAction="http://tempuri.org/IService1/GetBusStopResponse")]
        System.IAsyncResult BeginGetBusStop(int busID, double startLat, double startLong, double endLat, double endLong, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EzTravelWeb.localService.busStop> EndGetBusStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPath", ReplyAction="http://tempuri.org/IService1/GetPathResponse")]
        System.IAsyncResult BeginGetPath(int journeyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EzTravelWeb.localService.PathLocation> EndGetPath(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/retrieveMarkerInfo", ReplyAction="http://tempuri.org/IService1/retrieveMarkerInfoResponse")]
        System.IAsyncResult BeginretrieveMarkerInfo(string jid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EzTravelWeb.localService.DBMarker> EndretrieveMarkerInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetJourney", ReplyAction="http://tempuri.org/IService1/GetJourneyResponse")]
        System.IAsyncResult BeginGetJourney(string from, string to, System.AsyncCallback callback, object asyncState);
        
        int EndGetJourney(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetLocation", ReplyAction="http://tempuri.org/IService1/GetLocationResponse")]
        System.IAsyncResult BeginGetLocation(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetLocation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/retriveItinerary", ReplyAction="http://tempuri.org/IService1/retriveItineraryResponse")]
        System.IAsyncResult BeginretriveItinerary(string deviceID, string journeyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<EzTravelWeb.localService.Itinerary> EndretriveItinerary(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : EzTravelWeb.localService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBusStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBusStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EzTravelWeb.localService.busStop> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EzTravelWeb.localService.busStop>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EzTravelWeb.localService.PathLocation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EzTravelWeb.localService.PathLocation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class retrieveMarkerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public retrieveMarkerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EzTravelWeb.localService.DBMarker> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EzTravelWeb.localService.DBMarker>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJourneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJourneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class retriveItineraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public retriveItineraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<EzTravelWeb.localService.Itinerary> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<EzTravelWeb.localService.Itinerary>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<EzTravelWeb.localService.IService1>, EzTravelWeb.localService.IService1 {
        
        private BeginOperationDelegate onBeginGetBusStopDelegate;
        
        private EndOperationDelegate onEndGetBusStopDelegate;
        
        private System.Threading.SendOrPostCallback onGetBusStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPathDelegate;
        
        private EndOperationDelegate onEndGetPathDelegate;
        
        private System.Threading.SendOrPostCallback onGetPathCompletedDelegate;
        
        private BeginOperationDelegate onBeginretrieveMarkerInfoDelegate;
        
        private EndOperationDelegate onEndretrieveMarkerInfoDelegate;
        
        private System.Threading.SendOrPostCallback onretrieveMarkerInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJourneyDelegate;
        
        private EndOperationDelegate onEndGetJourneyDelegate;
        
        private System.Threading.SendOrPostCallback onGetJourneyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocationDelegate;
        
        private EndOperationDelegate onEndGetLocationDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginretriveItineraryDelegate;
        
        private EndOperationDelegate onEndretriveItineraryDelegate;
        
        private System.Threading.SendOrPostCallback onretriveItineraryCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetBusStopCompletedEventArgs> GetBusStopCompleted;
        
        public event System.EventHandler<GetPathCompletedEventArgs> GetPathCompleted;
        
        public event System.EventHandler<retrieveMarkerInfoCompletedEventArgs> retrieveMarkerInfoCompleted;
        
        public event System.EventHandler<GetJourneyCompletedEventArgs> GetJourneyCompleted;
        
        public event System.EventHandler<GetLocationCompletedEventArgs> GetLocationCompleted;
        
        public event System.EventHandler<retriveItineraryCompletedEventArgs> retriveItineraryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EzTravelWeb.localService.IService1.BeginGetBusStop(int busID, double startLat, double startLong, double endLat, double endLong, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBusStop(busID, startLat, startLong, endLat, endLong, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EzTravelWeb.localService.busStop> EzTravelWeb.localService.IService1.EndGetBusStop(System.IAsyncResult result) {
            return base.Channel.EndGetBusStop(result);
        }
        
        private System.IAsyncResult OnBeginGetBusStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int busID = ((int)(inValues[0]));
            double startLat = ((double)(inValues[1]));
            double startLong = ((double)(inValues[2]));
            double endLat = ((double)(inValues[3]));
            double endLong = ((double)(inValues[4]));
            return ((EzTravelWeb.localService.IService1)(this)).BeginGetBusStop(busID, startLat, startLong, endLat, endLong, callback, asyncState);
        }
        
        private object[] OnEndGetBusStop(System.IAsyncResult result) {
            System.Collections.Generic.List<EzTravelWeb.localService.busStop> retVal = ((EzTravelWeb.localService.IService1)(this)).EndGetBusStop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBusStopCompleted(object state) {
            if ((this.GetBusStopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBusStopCompleted(this, new GetBusStopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBusStopAsync(int busID, double startLat, double startLong, double endLat, double endLong) {
            this.GetBusStopAsync(busID, startLat, startLong, endLat, endLong, null);
        }
        
        public void GetBusStopAsync(int busID, double startLat, double startLong, double endLat, double endLong, object userState) {
            if ((this.onBeginGetBusStopDelegate == null)) {
                this.onBeginGetBusStopDelegate = new BeginOperationDelegate(this.OnBeginGetBusStop);
            }
            if ((this.onEndGetBusStopDelegate == null)) {
                this.onEndGetBusStopDelegate = new EndOperationDelegate(this.OnEndGetBusStop);
            }
            if ((this.onGetBusStopCompletedDelegate == null)) {
                this.onGetBusStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBusStopCompleted);
            }
            base.InvokeAsync(this.onBeginGetBusStopDelegate, new object[] {
                        busID,
                        startLat,
                        startLong,
                        endLat,
                        endLong}, this.onEndGetBusStopDelegate, this.onGetBusStopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EzTravelWeb.localService.IService1.BeginGetPath(int journeyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPath(journeyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EzTravelWeb.localService.PathLocation> EzTravelWeb.localService.IService1.EndGetPath(System.IAsyncResult result) {
            return base.Channel.EndGetPath(result);
        }
        
        private System.IAsyncResult OnBeginGetPath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int journeyID = ((int)(inValues[0]));
            return ((EzTravelWeb.localService.IService1)(this)).BeginGetPath(journeyID, callback, asyncState);
        }
        
        private object[] OnEndGetPath(System.IAsyncResult result) {
            System.Collections.Generic.List<EzTravelWeb.localService.PathLocation> retVal = ((EzTravelWeb.localService.IService1)(this)).EndGetPath(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPathCompleted(object state) {
            if ((this.GetPathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPathCompleted(this, new GetPathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPathAsync(int journeyID) {
            this.GetPathAsync(journeyID, null);
        }
        
        public void GetPathAsync(int journeyID, object userState) {
            if ((this.onBeginGetPathDelegate == null)) {
                this.onBeginGetPathDelegate = new BeginOperationDelegate(this.OnBeginGetPath);
            }
            if ((this.onEndGetPathDelegate == null)) {
                this.onEndGetPathDelegate = new EndOperationDelegate(this.OnEndGetPath);
            }
            if ((this.onGetPathCompletedDelegate == null)) {
                this.onGetPathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPathCompleted);
            }
            base.InvokeAsync(this.onBeginGetPathDelegate, new object[] {
                        journeyID}, this.onEndGetPathDelegate, this.onGetPathCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EzTravelWeb.localService.IService1.BeginretrieveMarkerInfo(string jid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginretrieveMarkerInfo(jid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EzTravelWeb.localService.DBMarker> EzTravelWeb.localService.IService1.EndretrieveMarkerInfo(System.IAsyncResult result) {
            return base.Channel.EndretrieveMarkerInfo(result);
        }
        
        private System.IAsyncResult OnBeginretrieveMarkerInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jid = ((string)(inValues[0]));
            return ((EzTravelWeb.localService.IService1)(this)).BeginretrieveMarkerInfo(jid, callback, asyncState);
        }
        
        private object[] OnEndretrieveMarkerInfo(System.IAsyncResult result) {
            System.Collections.Generic.List<EzTravelWeb.localService.DBMarker> retVal = ((EzTravelWeb.localService.IService1)(this)).EndretrieveMarkerInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnretrieveMarkerInfoCompleted(object state) {
            if ((this.retrieveMarkerInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.retrieveMarkerInfoCompleted(this, new retrieveMarkerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void retrieveMarkerInfoAsync(string jid) {
            this.retrieveMarkerInfoAsync(jid, null);
        }
        
        public void retrieveMarkerInfoAsync(string jid, object userState) {
            if ((this.onBeginretrieveMarkerInfoDelegate == null)) {
                this.onBeginretrieveMarkerInfoDelegate = new BeginOperationDelegate(this.OnBeginretrieveMarkerInfo);
            }
            if ((this.onEndretrieveMarkerInfoDelegate == null)) {
                this.onEndretrieveMarkerInfoDelegate = new EndOperationDelegate(this.OnEndretrieveMarkerInfo);
            }
            if ((this.onretrieveMarkerInfoCompletedDelegate == null)) {
                this.onretrieveMarkerInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnretrieveMarkerInfoCompleted);
            }
            base.InvokeAsync(this.onBeginretrieveMarkerInfoDelegate, new object[] {
                        jid}, this.onEndretrieveMarkerInfoDelegate, this.onretrieveMarkerInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EzTravelWeb.localService.IService1.BeginGetJourney(string from, string to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJourney(from, to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EzTravelWeb.localService.IService1.EndGetJourney(System.IAsyncResult result) {
            return base.Channel.EndGetJourney(result);
        }
        
        private System.IAsyncResult OnBeginGetJourney(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string from = ((string)(inValues[0]));
            string to = ((string)(inValues[1]));
            return ((EzTravelWeb.localService.IService1)(this)).BeginGetJourney(from, to, callback, asyncState);
        }
        
        private object[] OnEndGetJourney(System.IAsyncResult result) {
            int retVal = ((EzTravelWeb.localService.IService1)(this)).EndGetJourney(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJourneyCompleted(object state) {
            if ((this.GetJourneyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJourneyCompleted(this, new GetJourneyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJourneyAsync(string from, string to) {
            this.GetJourneyAsync(from, to, null);
        }
        
        public void GetJourneyAsync(string from, string to, object userState) {
            if ((this.onBeginGetJourneyDelegate == null)) {
                this.onBeginGetJourneyDelegate = new BeginOperationDelegate(this.OnBeginGetJourney);
            }
            if ((this.onEndGetJourneyDelegate == null)) {
                this.onEndGetJourneyDelegate = new EndOperationDelegate(this.OnEndGetJourney);
            }
            if ((this.onGetJourneyCompletedDelegate == null)) {
                this.onGetJourneyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJourneyCompleted);
            }
            base.InvokeAsync(this.onBeginGetJourneyDelegate, new object[] {
                        from,
                        to}, this.onEndGetJourneyDelegate, this.onGetJourneyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EzTravelWeb.localService.IService1.BeginGetLocation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> EzTravelWeb.localService.IService1.EndGetLocation(System.IAsyncResult result) {
            return base.Channel.EndGetLocation(result);
        }
        
        private System.IAsyncResult OnBeginGetLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EzTravelWeb.localService.IService1)(this)).BeginGetLocation(callback, asyncState);
        }
        
        private object[] OnEndGetLocation(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((EzTravelWeb.localService.IService1)(this)).EndGetLocation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocationCompleted(object state) {
            if ((this.GetLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocationCompleted(this, new GetLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocationAsync() {
            this.GetLocationAsync(null);
        }
        
        public void GetLocationAsync(object userState) {
            if ((this.onBeginGetLocationDelegate == null)) {
                this.onBeginGetLocationDelegate = new BeginOperationDelegate(this.OnBeginGetLocation);
            }
            if ((this.onEndGetLocationDelegate == null)) {
                this.onEndGetLocationDelegate = new EndOperationDelegate(this.OnEndGetLocation);
            }
            if ((this.onGetLocationCompletedDelegate == null)) {
                this.onGetLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocationDelegate, null, this.onEndGetLocationDelegate, this.onGetLocationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EzTravelWeb.localService.IService1.BeginretriveItinerary(string deviceID, string journeyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginretriveItinerary(deviceID, journeyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<EzTravelWeb.localService.Itinerary> EzTravelWeb.localService.IService1.EndretriveItinerary(System.IAsyncResult result) {
            return base.Channel.EndretriveItinerary(result);
        }
        
        private System.IAsyncResult OnBeginretriveItinerary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string deviceID = ((string)(inValues[0]));
            string journeyID = ((string)(inValues[1]));
            return ((EzTravelWeb.localService.IService1)(this)).BeginretriveItinerary(deviceID, journeyID, callback, asyncState);
        }
        
        private object[] OnEndretriveItinerary(System.IAsyncResult result) {
            System.Collections.Generic.List<EzTravelWeb.localService.Itinerary> retVal = ((EzTravelWeb.localService.IService1)(this)).EndretriveItinerary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnretriveItineraryCompleted(object state) {
            if ((this.retriveItineraryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.retriveItineraryCompleted(this, new retriveItineraryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void retriveItineraryAsync(string deviceID, string journeyID) {
            this.retriveItineraryAsync(deviceID, journeyID, null);
        }
        
        public void retriveItineraryAsync(string deviceID, string journeyID, object userState) {
            if ((this.onBeginretriveItineraryDelegate == null)) {
                this.onBeginretriveItineraryDelegate = new BeginOperationDelegate(this.OnBeginretriveItinerary);
            }
            if ((this.onEndretriveItineraryDelegate == null)) {
                this.onEndretriveItineraryDelegate = new EndOperationDelegate(this.OnEndretriveItinerary);
            }
            if ((this.onretriveItineraryCompletedDelegate == null)) {
                this.onretriveItineraryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnretriveItineraryCompleted);
            }
            base.InvokeAsync(this.onBeginretriveItineraryDelegate, new object[] {
                        deviceID,
                        journeyID}, this.onEndretriveItineraryDelegate, this.onretriveItineraryCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EzTravelWeb.localService.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<EzTravelWeb.localService.IService1>, EzTravelWeb.localService.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<EzTravelWeb.localService.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBusStop(int busID, double startLat, double startLong, double endLat, double endLong, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = busID;
                _args[1] = startLat;
                _args[2] = startLong;
                _args[3] = endLat;
                _args[4] = endLong;
                System.IAsyncResult _result = base.BeginInvoke("GetBusStop", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EzTravelWeb.localService.busStop> EndGetBusStop(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EzTravelWeb.localService.busStop> _result = ((System.Collections.Generic.List<EzTravelWeb.localService.busStop>)(base.EndInvoke("GetBusStop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPath(int journeyID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = journeyID;
                System.IAsyncResult _result = base.BeginInvoke("GetPath", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EzTravelWeb.localService.PathLocation> EndGetPath(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EzTravelWeb.localService.PathLocation> _result = ((System.Collections.Generic.List<EzTravelWeb.localService.PathLocation>)(base.EndInvoke("GetPath", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginretrieveMarkerInfo(string jid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = jid;
                System.IAsyncResult _result = base.BeginInvoke("retrieveMarkerInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EzTravelWeb.localService.DBMarker> EndretrieveMarkerInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EzTravelWeb.localService.DBMarker> _result = ((System.Collections.Generic.List<EzTravelWeb.localService.DBMarker>)(base.EndInvoke("retrieveMarkerInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetJourney(string from, string to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = from;
                _args[1] = to;
                System.IAsyncResult _result = base.BeginInvoke("GetJourney", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetJourney(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetJourney", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLocation(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLocation", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetLocation(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetLocation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginretriveItinerary(string deviceID, string journeyID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = deviceID;
                _args[1] = journeyID;
                System.IAsyncResult _result = base.BeginInvoke("retriveItinerary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<EzTravelWeb.localService.Itinerary> EndretriveItinerary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<EzTravelWeb.localService.Itinerary> _result = ((System.Collections.Generic.List<EzTravelWeb.localService.Itinerary>)(base.EndInvoke("retriveItinerary", _args, result)));
                return _result;
            }
        }
    }
}
